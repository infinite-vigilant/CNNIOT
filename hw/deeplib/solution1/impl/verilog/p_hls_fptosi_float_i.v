// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module p_hls_fptosi_float_i (
        ap_clk,
        ap_rst,
        x,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] x;
output  [31:0] ap_return;
input   ap_ce;

reg   [0:0] p_Result_s_reg_185;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] p_Val2_2_fu_166_p3;
reg   [31:0] p_Val2_2_reg_190;
wire    ap_block_pp0_stage0;
wire   [31:0] p_Val2_s_fu_44_p1;
wire   [22:0] loc_V_1_fu_66_p1;
wire   [24:0] tmp_3_i_i_fu_70_p4;
wire   [7:0] loc_V_fu_56_p4;
wire   [8:0] tmp_i_i_i_cast1_fu_84_p1;
wire   [8:0] sh_assign_fu_88_p2;
wire   [7:0] tmp_5_i_i_fu_102_p2;
wire   [0:0] isNeg_fu_94_p3;
wire  signed [8:0] tmp_5_i_i_cast_fu_108_p1;
wire   [8:0] sh_assign_1_fu_112_p3;
wire  signed [31:0] sh_assign_1_cast_fu_120_p1;
wire  signed [24:0] sh_assign_1_cast_cas_fu_124_p1;
wire   [78:0] tmp_3_i_i_cast2_fu_80_p1;
wire   [78:0] tmp_7_i_i_fu_128_p1;
wire   [24:0] tmp_8_i_i_fu_132_p2;
wire   [0:0] tmp_fu_144_p3;
wire   [78:0] tmp_i_i_fu_138_p2;
wire   [31:0] tmp_13_fu_152_p1;
wire   [31:0] tmp_14_fu_156_p4;
wire   [31:0] p_Val2_6_i_i_fu_174_p2;

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        p_Result_s_reg_185 <= p_Val2_s_fu_44_p1[32'd31];
        p_Val2_2_reg_190 <= p_Val2_2_fu_166_p3;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_return = ((p_Result_s_reg_185[0:0] === 1'b1) ? p_Val2_6_i_i_fu_174_p2 : p_Val2_2_reg_190);

assign isNeg_fu_94_p3 = sh_assign_fu_88_p2[32'd8];

assign loc_V_1_fu_66_p1 = p_Val2_s_fu_44_p1[22:0];

assign loc_V_fu_56_p4 = {{p_Val2_s_fu_44_p1[30:23]}};

assign p_Val2_2_fu_166_p3 = ((isNeg_fu_94_p3[0:0] === 1'b1) ? tmp_13_fu_152_p1 : tmp_14_fu_156_p4);

assign p_Val2_6_i_i_fu_174_p2 = (32'd0 - p_Val2_2_reg_190);

assign p_Val2_s_fu_44_p1 = x;

assign sh_assign_1_cast_cas_fu_124_p1 = $signed(sh_assign_1_fu_112_p3);

assign sh_assign_1_cast_fu_120_p1 = $signed(sh_assign_1_fu_112_p3);

assign sh_assign_1_fu_112_p3 = ((isNeg_fu_94_p3[0:0] === 1'b1) ? tmp_5_i_i_cast_fu_108_p1 : sh_assign_fu_88_p2);

assign sh_assign_fu_88_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_cast1_fu_84_p1));

assign tmp_13_fu_152_p1 = tmp_fu_144_p3;

assign tmp_14_fu_156_p4 = {{tmp_i_i_fu_138_p2[55:24]}};

assign tmp_3_i_i_cast2_fu_80_p1 = tmp_3_i_i_fu_70_p4;

assign tmp_3_i_i_fu_70_p4 = {{{{1'd1}, {loc_V_1_fu_66_p1}}}, {1'd0}};

assign tmp_5_i_i_cast_fu_108_p1 = $signed(tmp_5_i_i_fu_102_p2);

assign tmp_5_i_i_fu_102_p2 = (8'd127 - loc_V_fu_56_p4);

assign tmp_7_i_i_fu_128_p1 = $unsigned(sh_assign_1_cast_fu_120_p1);

assign tmp_8_i_i_fu_132_p2 = tmp_3_i_i_fu_70_p4 >> sh_assign_1_cast_cas_fu_124_p1;

assign tmp_fu_144_p3 = tmp_8_i_i_fu_132_p2[32'd24];

assign tmp_i_i_fu_138_p2 = tmp_3_i_i_cast2_fu_80_p1 << tmp_7_i_i_fu_128_p1;

assign tmp_i_i_i_cast1_fu_84_p1 = loc_V_fu_56_p4;

endmodule //p_hls_fptosi_float_i
